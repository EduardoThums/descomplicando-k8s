apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: giropops-host-path
provisioner: rancher.io/local-path # default in kind
reclaimPolicy: Delete
volumeBindingMode: Immediate
# parameters:
#   archiveOnDelete: "false"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-host-path
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany # only one pod is allow to read and write (per time?)
  persistentVolumeReclaimPolicy: Retain # if the pvc is deleted then retain the volume
  # nfs:
    # server: 192.168.1.105
    # server: host.docker.internal
    # server: 172.17.0.1
    # path: /mnt/nfs
    # readOnly: false
  hostPath:
    path: /mnt/data
  storageClassName: giropops-host-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: giropops-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi # requests a piece of a the volume of 1gb in size
  storageClassName: giropops-host-path
  # selector:
  #   matchLabels:
  #     hello: world
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-with-pv
spec:
  replicas: 2
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
        - image: nginx
          name: nginx
          volumeMounts:
            - name: app 
              mountPath: /usr/share/nginx/html
          # securityContext:
          #   privileged: true
      volumes:
        - name: app
          persistentVolumeClaim:
            claimName: giropops-pvc
