# testar se ao especificar que apenas a label app=nginx 
# pode acessar o servi√ßo do redis isso vale tbm para outros pods com a mesma label mas em outro namespace
apiVersion: v1
kind: Namespace
metadata:
  name: giropops
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis-deployment
  namespace: giropops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis
        name: redis
        ports:
          - containerPort: 6379
        resources:
          limits:
            memory: "256Mi"
            cpu: "500m"
          requests:
            memory: "128Mi"
            cpu: "250m"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: giropops
spec:
  selector:
    app: redis
  ports:
    - port: 6379
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: giropops
spec:
  replicas: 2
  selector:
    matchLabels:
      app: giropops-senhas
  template:
    metadata:
      labels:
        app: giropops-senhas
    spec:
      initContainers:
        - name: check-redis-service-liveness
          image: busybox:1.28
          command: ['sh', '-c', "until nslookup $REDIS_HOST; do echo waiting for $REDIS_HOST; sleep 2; done"]
          env:
          - name: REDIS_HOST
            value: redis-service
      containers:
      - image: linuxtips/giropops-senhas:1.0
        name: giropops-senhas
        env:
        - name: REDIS_HOST
          value: redis-service
        ports:
        - containerPort: 5000
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: giropops-senhas
  namespace: giropops
  labels:
    app: giropops-senhas
spec:
  selector:
    app: giropops-senhas
  ports:
    - port: 5000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: giropops-senhas
  namespace: giropops
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: giropops-senhas
                port:
                  number: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: giropops-senhas-static
  namespace: giropops
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /static
            pathType: Prefix
            backend:
              service:
                name: giropops-senhas
                port:
                  number: 5000
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-giropops
  namespace: giropops
spec:
  policyTypes:
    - Ingress
    - Egress
  podSelector: {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-giropops-egress-intranet
  namespace: giropops
spec:
  policyTypes:
    - Egress
  podSelector: {}
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: giropops
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kube-system-dns
  namespace: giropops
spec:
  policyTypes:
    - Egress
  podSelector: {}
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-redis-access
  namespace: giropops
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app: redis
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: giropops-senhas
      ports:
        - port: 6379
          protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-nginx
  namespace: giropops
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app: giropops-senhas
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
