apiVersion: v1
kind: PersistentVolume
metadata:
  name: html-pv
spec:
  capacity:
    storage: 500Mi
  accessModes: ["ReadOnlyMany"]
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mnt/data
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: html-pvc
spec:
  resources:
    requests:
      storage: 500Mi
  accessModes: ["ReadOnlyMany"]
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: nginx
          name: webserver
          resources:
            requests:
              memory: 64Mi
              cpu: 0.3
            limits:
              memory: 128Mi
              cpu: 0.5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx2
spec:
  replicas: 1
  selector:
    matchLabels:
      # app: nginx
      app2: nginx
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: nginx
        app2: nginx
    spec:
      containers:
        - image: nginx
          name: webserver
          resources:
            requests:
              memory: 64Mi
              cpu: 0.3
            limits:
              memory: 128Mi
              cpu: 0.5
          volumeMounts:
            - name: html
              mountPath: /usr/share/nginx/html
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: html-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  selector:
    app: nginx
    app2: nginx
  ports:
    - protocol: TCP
      port: 80
      nodePort: 30007
